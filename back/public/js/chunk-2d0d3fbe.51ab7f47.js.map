{"version":3,"sources":["webpack:///./node_modules/@iconify/vue2/dist/iconify.mjs"],"names":["matchName","iconDefaults","Object","freeze","left","top","width","height","rotate","vFlip","hFlip","fullIcon","data","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIcon","dashSeparated","join","icon","match","mergeIconData","alias","key","prop","getIconData$1","full","getIcon","iteration","_a","_b","_c","_d","icons","assign","aliases","item","result2","parent","chars","matchChar","validateIconProps","fix","attr","type","validateIconSet","obj","options","Error","keys","forEach","body","validateAlias","validatedAliases","has","failedAliases","add","Set","expectedType","actualType","char","target","isVariation","parseIconSet","callback","names","err","not_found","Array","push","iconData","parseAliases","storage$1","create","newStorage","missing","getStorage","providerStorage","addIconSet","storage2","t","Date","now","addIconToStorage","getIconFromStorage","simpleNames","allowSimpleNames","allow","getIconData","addIcon","storage","addCollection","added","defaults","inline","hAlign","vAlign","mergeCustomisations","defaults2","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","preserveAspectRatio","props","iconToSVG","customisations","box","transformations","tempValue","rotation","floor","unshift","attributes","viewBox","regex","randomPrefix","toString","random","counter","replaceIDs","ids","exec","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","concat","mergeParams","base","params","hasParams","indexOf","paramToString","encodeURIComponent","maxLengthCache","pathCache","detectFetch","fetch","chunk","String","fromCharCode","req","global","fetchModule","calculateMaxLength","maxHostLength","host","max","url","cacheKey","prepare","results","maxLength","getPath","send","status","done","iconsList","uri","defaultError","then","response","json","setTimeout","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","callbacks","pendingUpdates","removeCallback","sources","providerCallbacks","items","filter","row","updateCallbacks","providerPendingUpdates","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","success","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","error","isError","queued","execNext","resource","timeout2","setConfig","newConfig","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","newIndex","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","api","cached","moduleKey","cache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","loadedNewIcons","providerLoaderFlags","errorsCache","loadNewIcons","time","console","providerIconsToLoad","providerQueueFlags","providerPendingIcons","icons2","parsed","store","err2","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","cacheVersion","cachePrefix","countKey","versionKey","hour","cacheExpiration","local","session","count","emptyList","_window","window","getGlobal","setCount","setItem","getCount","count2","getItem","total","parseInt","initCache","destroyCache","i","removeItem","loadCache","minTime","load","func","valid","JSON","parse","version","storeCache","stringify","separator","flipFromString","custom","flip","str","trim","alignmentFromString","align","rotateFromString","defaultValue","units","value2","svgDefaults","customisationAliases","suffix","boolean","toLowerCase","render","createElement","contextData","componentProps","style","color","verticalAlign","localCounter","attrs","domProps","innerHTML","class","document","IconifyPreload","preload","e","IconifyProviders","providers","Icon","extend","inheritAttrs","mounted","this","_name","_loadingIcon","abortLoading","methods","onload","iconName","$forceUpdate","classes","placeholder","slots","default","$slots","$attrs","onLoad","context","$data"],"mappings":"mHAAA,+DAGIA,EAAY,2BACZC,EAAeC,OAAOC,OAAO,CAC/BC,KAAM,EACNC,IAAK,EACLC,MAAO,GACPC,OAAQ,GACRC,OAAQ,EACRC,OAAO,EACPC,OAAO,IAET,SAASC,EAASC,GAChB,MAAO,IAAKX,KAAiBW,GAI/B,IAAIC,EAAe,CAACC,EAAOC,EAAUC,EAAiBC,EAAW,MAC/D,MAAMC,EAAiBJ,EAAMK,MAAM,KACnC,GAA0B,MAAtBL,EAAMM,MAAM,EAAG,GAAY,CAC7B,GAAIF,EAAeG,OAAS,GAAKH,EAAeG,OAAS,EACvD,OAAO,KAETJ,EAAWC,EAAeI,QAAQF,MAAM,GAE1C,GAAIF,EAAeG,OAAS,IAAMH,EAAeG,OAC/C,OAAO,KAET,GAAIH,EAAeG,OAAS,EAAG,CAC7B,MAAME,EAAQL,EAAeM,MACvBC,EAASP,EAAeM,MACxBE,EAAS,CACbT,SAAUC,EAAeG,OAAS,EAAIH,EAAe,GAAKD,EAC1DQ,SACAE,KAAMJ,GAER,OAAOR,IAAaa,EAAaF,GAAU,KAAOA,EAEpD,MAAMC,EAAOT,EAAe,GACtBW,EAAgBF,EAAKR,MAAM,KACjC,GAAIU,EAAcR,OAAS,EAAG,CAC5B,MAAMK,EAAS,CACbT,WACAQ,OAAQI,EAAcP,QACtBK,KAAME,EAAcC,KAAK,MAE3B,OAAOf,IAAaa,EAAaF,GAAU,KAAOA,EAEpD,GAAIV,GAAgC,KAAbC,EAAiB,CACtC,MAAMS,EAAS,CACbT,WACAQ,OAAQ,GACRE,QAEF,OAAOZ,IAAaa,EAAaF,EAAQV,GAAmB,KAAOU,EAErE,OAAO,MAELE,EAAe,CAACG,EAAMf,MACnBe,KAGwB,KAAlBA,EAAKd,WAAmBc,EAAKd,SAASe,MAAMhC,MAAgBgB,GAAmC,KAAhBe,EAAKN,QAAiBM,EAAKN,OAAOO,MAAMhC,MAAe+B,EAAKJ,KAAKK,MAAMhC,IAInK,SAASiC,EAAcF,EAAMG,GAC3B,MAAMR,EAAS,IAAKK,GACpB,IAAK,MAAMI,KAAOlC,EAAc,CAC9B,MAAMmC,EAAOD,EACb,QAAoB,IAAhBD,EAAME,GAAkB,CAC1B,MAAMtB,EAAQoB,EAAME,GACpB,QAAqB,IAAjBV,EAAOU,GAAkB,CAC3BV,EAAOU,GAAQtB,EACf,SAEF,OAAQsB,GACN,IAAK,SACHV,EAAOU,IAASV,EAAOU,GAAQtB,GAAS,EACxC,MACF,IAAK,QACL,IAAK,QACHY,EAAOU,GAAQtB,IAAUY,EAAOU,GAChC,MACF,QACEV,EAAOU,GAAQtB,IAIvB,OAAOY,EAIT,SAASW,EAAczB,EAAMe,EAAMW,GAAO,GACxC,SAASC,EAAQhB,EAAOiB,GACtB,IAAIC,EAAIC,EAAIC,EAAIC,EAChB,QAA0B,IAAtBhC,EAAKiC,MAAMtB,GACb,OAAOrB,OAAO4C,OAAO,GAAIlC,EAAKiC,MAAMtB,IAEtC,GAAIiB,EAAY,EACd,OAAO,KAET,QAA2D,KAA/B,OAAtBC,EAAK7B,EAAKmC,cAAmB,EAASN,EAAGlB,IAAoB,CACjE,MAAMyB,EAA8B,OAAtBN,EAAK9B,EAAKmC,cAAmB,EAASL,EAAGnB,GACjD0B,EAAUV,EAAQS,EAAKE,OAAQV,EAAY,GACjD,OAAIS,EACKhB,EAAcgB,EAASD,GAEzBC,EAET,OAAkB,IAAdT,QAAwE,KAA/B,OAApBG,EAAK/B,EAAKuC,YAAiB,EAASR,EAAGpB,IACvDgB,EAA6B,OAApBK,EAAKhC,EAAKuC,YAAiB,EAASP,EAAGrB,GAAQiB,EAAY,GAEtE,KAET,MAAMd,EAASa,EAAQZ,EAAM,GAC7B,GAAID,EACF,IAAK,MAAMS,KAAOlC,OACI,IAAhByB,EAAOS,SAAiC,IAAdvB,EAAKuB,KACjCT,EAAOS,GAAOvB,EAAKuB,IAIzB,OAAOT,GAAUY,EAAO3B,EAASe,GAAUA,EAI7C,IAAI0B,EAAY,2BAChB,SAASC,EAAkBL,EAAMM,GAC/B,IAAK,MAAMnB,KAAOa,EAAM,CACtB,MAAMO,EAAOpB,EACPrB,EAAQkC,EAAKO,GACbC,SAAc1C,EACpB,GAAa,cAAT0C,EAIJ,OAAQrB,GACN,IAAK,OACL,IAAK,SACH,GAAa,WAATqB,EACF,OAAOrB,EAET,MACF,IAAK,QACL,IAAK,QACL,IAAK,SACH,GAAa,YAATqB,EAAoB,CACtB,IAAIF,EAGF,OAAOnB,SAFAa,EAAKO,GAKhB,MACF,IAAK,QACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,SACL,IAAK,eACL,IAAK,YACL,IAAK,gBACH,GAAa,WAATC,EAAmB,CACrB,IAAIF,EAGF,OAAOnB,SAFAa,EAAKO,GAKhB,MACF,QACE,GAAa,WAATC,EAAmB,CACrB,IAAIF,EAGF,OAAOnB,SAFAa,EAAKO,gBAxCXP,EAAKO,GA+ChB,OAAO,KAET,SAASE,EAAgBC,EAAKC,GAC5B,MAAML,KAAoB,MAAXK,OAAkB,EAASA,EAAQL,KAClD,GAAmB,kBAARI,GAA4B,OAARA,GAAqC,kBAAdA,EAAIb,QAAuBa,EAAIb,MACnF,MAAM,IAAIe,MAAM,gBAElB,MAAMhD,EAAO8C,EACb,GAA2D,kBAApC,MAAXC,OAAkB,EAASA,EAAQlC,QAC7Cb,EAAKa,OAASkC,EAAQlC,YACjB,GAA2B,kBAAhBb,EAAKa,SAAwBb,EAAKa,OAAOO,MAAMhC,GAC/D,MAAM,IAAI4D,MAAM,kBAElB,GAA6D,kBAAtC,MAAXD,OAAkB,EAASA,EAAQ1C,UAC7CL,EAAKK,SAAW0C,EAAQ1C,cACnB,QAAsB,IAAlBL,EAAKK,SAAqB,CACnC,MAAMH,EAAQF,EAAKK,SACnB,GAAqB,kBAAVH,GAAgC,KAAVA,IAAiBA,EAAMkB,MAAMhC,GAAY,CACxE,IAAIsD,EAGF,MAAM,IAAIM,MAAM,2BAFThD,EAAKK,UAMlB,MAAM4B,EAAQjC,EAAKiC,MA0BnB,GAzBA3C,OAAO2D,KAAKhB,GAAOiB,QAASnC,IAC1B,IAAKA,EAAKK,MAAMhC,GAAY,CAC1B,GAAIsD,EAEF,mBADOT,EAAMlB,GAGf,MAAM,IAAIiC,MAAM,uBAAuBjC,MAEzC,MAAMqB,EAAOH,EAAMlB,GACnB,GAAoB,kBAATqB,GAA8B,OAATA,GAAsC,kBAAdA,EAAKe,KAAmB,CAC9E,GAAIT,EAEF,mBADOT,EAAMlB,GAGf,MAAM,IAAIiC,MAAM,kBAAkBjC,MAEpC,MAAMQ,EAA6B,kBAAhBa,EAAKE,OAAsB,SAAWG,EAAkBL,EAAMM,GACjF,GAAY,OAARnB,EAAc,CAChB,GAAImB,EAEF,mBADOT,EAAMlB,GAGf,MAAM,IAAIiC,MAAM,qBAAqBzB,eAAiBR,UAGrDzB,OAAO2D,KAAKjD,EAAKiC,OAAOxB,OAC3B,MAAM,IAAIuC,MAAM,qBAElB,QAAqB,IAAjBhD,EAAKmC,UACqB,kBAAjBnC,EAAKmC,SAAyC,OAAjBnC,EAAKmC,SAAkB,CAC7D,IAAIO,EAGF,MAAM,IAAIM,MAAM,+BAFThD,EAAKmC,QAMlB,GAA4B,kBAAjBnC,EAAKmC,QAAsB,CACpC,IAAIiB,EAAgB,SAASrC,EAAMa,GACjC,GAAIyB,EAAiBC,IAAIvC,GACvB,OAAQwC,EAAcD,IAAIvC,GAE5B,MAAMqB,EAAOD,EAAQpB,GACrB,GAAIa,EAAY,GAAqB,kBAATQ,GAA8B,OAATA,GAAwC,kBAAhBA,EAAKE,SAAwBvB,EAAKK,MAAMhC,GAAY,CAC3H,GAAIsD,EAGF,cAFOP,EAAQpB,GACfwC,EAAcC,IAAIzC,IACX,EAET,MAAM,IAAIiC,MAAM,wBAAwBjC,MAE1C,MAAMuB,EAASF,EAAKE,OACpB,QAA2B,IAAvBtC,EAAKiC,MAAMK,UACW,IAApBH,EAAQG,KAAuBc,EAAcd,EAAQV,EAAY,IAAI,CACvE,GAAIc,EAGF,cAFOP,EAAQpB,GACfwC,EAAcC,IAAIzC,IACX,EAET,MAAM,IAAIiC,MAAM,kCAAkCjC,GAGlD2B,QAAqB,IAAdN,EAAKe,aACPf,EAAKe,KAEd,MAAM5B,OAAoB,IAAda,EAAKe,KAAkB,OAASV,EAAkBL,EAAMM,GACpE,GAAY,OAARnB,EAAc,CAChB,GAAImB,EAGF,cAFOP,EAAQpB,GACfwC,EAAcC,IAAIzC,IACX,EAET,MAAM,IAAIiC,MAAM,qBAAqBzB,gBAAkBR,MAGzD,OADAsC,EAAiBG,IAAIzC,IACd,GAET,MAAMoB,EAAUnC,EAAKmC,QACfkB,EAAmB,IAAII,IACvBF,EAAgB,IAAIE,IAC1BnE,OAAO2D,KAAKd,GAASe,QAASnC,IAC5BqC,EAAcrC,EAAM,KAElB2B,IAAQpD,OAAO2D,KAAKjD,EAAKmC,SAAS1B,eAC7BT,EAAKmC,QAUhB,GAPA7C,OAAO2D,KAAK5D,GAAc6D,QAAS1B,IACjC,MAAMkC,SAAsBrE,EAAamC,GACnCmC,SAAoB3D,EAAKwB,GAC/B,GAAmB,cAAfmC,GAA8BA,IAAeD,EAC/C,MAAM,IAAIV,MAAM,2BAA2BxB,aAG5B,IAAfxB,EAAKuC,QACmB,kBAAfvC,EAAKuC,OAAqC,OAAfvC,EAAKuC,OAAgB,CACzD,IAAIG,EAGF,MAAM,IAAIM,MAAM,iCAFThD,EAAKuC,MAMlB,GAA0B,kBAAfvC,EAAKuC,MAAoB,CAClC,MAAMA,EAAQvC,EAAKuC,MACnBjD,OAAO2D,KAAKV,GAAOW,QAASU,IAC1B,IAAI/B,EACJ,IAAK+B,EAAKxC,MAAMoB,IAAqC,kBAAhBD,EAAMqB,GAAoB,CAC7D,GAAIlB,EAEF,mBADOH,EAAMqB,GAGf,MAAM,IAAIZ,MAAM,sBAAsBY,MAExC,MAAMC,EAAStB,EAAMqB,GACrB,QAA2B,IAAvB5D,EAAKiC,MAAM4B,SAA8E,KAAhC,OAAtBhC,EAAK7B,EAAKmC,cAAmB,EAASN,EAAGgC,IAAqB,CACnG,GAAInB,EAEF,mBADOH,EAAMqB,GAGf,MAAM,IAAIZ,MAAM,cAAcY,8BAAiCC,SAG/DnB,IAAQpD,OAAO2D,KAAKjD,EAAKuC,OAAO9B,eAC3BT,EAAKuC,MAGhB,OAAOvC,EAIT,SAAS8D,EAAY1B,GACnB,IAAK,MAAMb,KAAOlC,EAChB,QAAkB,IAAd+C,EAAKb,GACP,OAAO,EAGX,OAAO,EAET,SAASwC,EAAa/D,EAAMgE,EAAUjB,GACpCA,EAAUA,GAAW,GACrB,MAAMkB,EAAQ,GACd,GAAoB,kBAATjE,GAA2C,kBAAfA,EAAKiC,MAC1C,OAAOgC,EAET,MAAM9D,EAAW4C,EAAQ5C,SACzB,IAAiB,IAAbA,EACF,IACE0C,EAAgB7C,EAA0B,kBAAbG,EAAwBA,EAAW,CAAEuC,KAAK,IACvE,MAAOwB,GACP,OAAOD,EAGPjE,EAAKmE,qBAAqBC,OAC5BpE,EAAKmE,UAAUjB,QAASnC,IACtBiD,EAASjD,EAAM,MACfkD,EAAMI,KAAKtD,KAGf,MAAMkB,EAAQjC,EAAKiC,MACnB3C,OAAO2D,KAAKhB,GAAOiB,QAASnC,IAC1B,MAAMuD,EAAW7C,EAAczB,EAAMe,GAAM,GACvCuD,IACFN,EAASjD,EAAMuD,GACfL,EAAMI,KAAKtD,MAGf,MAAMwD,EAAexB,EAAQZ,SAAW,MACxC,GAAqB,SAAjBoC,GAAmD,kBAAjBvE,EAAKmC,QAAsB,CAC/D,MAAMA,EAAUnC,EAAKmC,QACrB7C,OAAO2D,KAAKd,GAASe,QAASnC,IAC5B,GAAqB,eAAjBwD,GAAiCT,EAAY3B,EAAQpB,IACvD,OAEF,MAAMuD,EAAW7C,EAAczB,EAAMe,GAAM,GACvCuD,IACFN,EAASjD,EAAMuD,GACfL,EAAMI,KAAKtD,MAIjB,OAAOkD,EAIT,IAAIO,EAAYlF,OAAOmF,OAAO,MAC9B,SAASC,EAAWrE,EAAUQ,GAC5B,MAAO,CACLR,WACAQ,SACAoB,MAAO3C,OAAOmF,OAAO,MACrBE,QAASrF,OAAOmF,OAAO,OAG3B,SAASG,EAAWvE,EAAUQ,QACA,IAAxB2D,EAAUnE,KACZmE,EAAUnE,GAAYf,OAAOmF,OAAO,OAEtC,MAAMI,EAAkBL,EAAUnE,GAIlC,YAHgC,IAA5BwE,EAAgBhE,KAClBgE,EAAgBhE,GAAU6D,EAAWrE,EAAUQ,IAE1CgE,EAAgBhE,GAEzB,SAASiE,EAAWC,EAAU/E,GAC5B,MAAMgF,EAAIC,KAAKC,MACf,OAAOnB,EAAa/D,EAAM,CAACe,EAAMI,KAC3BA,EACF4D,EAAS9C,MAAMlB,GAAQI,EAEvB4D,EAASJ,QAAQ5D,GAAQiE,IAI/B,SAASG,EAAiBJ,EAAUhE,EAAMI,GACxC,IACE,GAAyB,kBAAdA,EAAKgC,KAEd,OADA4B,EAAS9C,MAAMlB,GAAQzB,OAAOC,OAAOQ,EAASoB,KACvC,EAET,MAAO+C,IAET,OAAO,EAET,SAASkB,EAAmBL,EAAUhE,GACpC,MAAMb,EAAQ6E,EAAS9C,MAAMlB,GAC7B,YAAiB,IAAVb,EAAmB,KAAOA,EA2BnC,IAAImF,GAAc,EAClB,SAASC,EAAiBC,GAIxB,MAHqB,mBAAVA,IACTF,EAAcE,GAETF,EAET,SAASG,EAAYzE,GACnB,MAAMI,EAAuB,kBAATJ,EAAoBd,EAAac,GAAM,EAAMsE,GAAetE,EAChF,OAAOI,EAAOiE,EAAmBR,EAAWzD,EAAKd,SAAUc,EAAKN,QAASM,EAAKJ,MAAQ,KAExF,SAAS0E,EAAQ1E,EAAMf,GACrB,MAAMmB,EAAOlB,EAAac,GAAM,EAAMsE,GACtC,IAAKlE,EACH,OAAO,EAET,MAAMuE,EAAUd,EAAWzD,EAAKd,SAAUc,EAAKN,QAC/C,OAAOsE,EAAiBO,EAASvE,EAAKJ,KAAMf,GAE9C,SAAS2F,EAAc3F,EAAMK,GAC3B,GAAoB,kBAATL,EACT,OAAO,EAKT,GAHwB,kBAAbK,IACTA,EAAoC,kBAAlBL,EAAKK,SAAwBL,EAAKK,SAAW,IAE7DgF,GAA4B,KAAbhF,IAA2C,kBAAhBL,EAAKa,QAAuC,KAAhBb,EAAKa,QAAgB,CAC7F,IAAI+E,GAAQ,EAWZ,OAVA7B,EAAa/D,EAAM,CAACe,EAAMI,KACpBA,GAAQsE,EAAQ1E,EAAMI,KACxByE,GAAQ,IAET,CACDzF,SAAU,CACRuC,KAAK,EACL7B,OAAQ,MAGL+E,EAET,GAA2B,kBAAhB5F,EAAKa,SAAwBG,EAAa,CACnDX,WACAQ,OAAQb,EAAKa,OACbE,KAAM,MAEN,OAAO,EAET,MAAM2E,EAAUd,EAAWvE,EAAUL,EAAKa,QAC1C,QAASiE,EAAWY,EAAS1F,GAW/B,IAAI6F,EAAWvG,OAAOC,OAAO,CAC3BuG,QAAQ,EACRpG,MAAO,KACPC,OAAQ,KACRoG,OAAQ,SACRC,OAAQ,SACRxF,OAAO,EACPV,OAAO,EACPD,OAAO,EACPD,OAAQ,IAEV,SAASqG,EAAoBC,EAAW9D,GACtC,MAAMtB,EAAS,GACf,IAAK,MAAMS,KAAO2E,EAAW,CAC3B,MAAMvD,EAAOpB,EAEb,GADAT,EAAO6B,GAAQuD,EAAUvD,QACN,IAAfP,EAAKO,GACP,SAEF,MAAMzC,EAAQkC,EAAKO,GACnB,OAAQA,GACN,IAAK,SACL,IAAK,QACkB,mBAAVzC,IACTY,EAAO6B,GAAQzC,GAEjB,MACF,IAAK,QACL,IAAK,SACW,IAAVA,IACFY,EAAO6B,IAAS7B,EAAO6B,IAEzB,MACF,IAAK,SACL,IAAK,SACkB,kBAAVzC,GAAgC,KAAVA,IAC/BY,EAAO6B,GAAQzC,GAEjB,MACF,IAAK,QACL,IAAK,UACkB,kBAAVA,GAAgC,KAAVA,GAAiC,kBAAVA,GAAsBA,GAAmB,OAAVA,KACrFY,EAAO6B,GAAQzC,GAEjB,MACF,IAAK,SACkB,kBAAVA,IACTY,EAAO6B,IAASzC,GAElB,OAGN,OAAOY,EAIT,IAAIqF,EAAa,4BACbC,EAAY,4BAChB,SAASC,EAAcC,EAAMC,EAAOC,GAClC,GAAc,IAAVD,EACF,OAAOD,EAGT,GADAE,OAA0B,IAAdA,EAAuB,IAAMA,EACrB,kBAATF,EACT,OAAOG,KAAKC,KAAKJ,EAAOC,EAAQC,GAAaA,EAE/C,GAAoB,kBAATF,EACT,OAAOA,EAET,MAAMK,EAAWL,EAAK/F,MAAM4F,GAC5B,GAAiB,OAAbQ,IAAsBA,EAASlG,OACjC,OAAO6F,EAET,MAAMM,EAAW,GACjB,IAAIC,EAAOF,EAASjG,QAChBoG,EAAWV,EAAUW,KAAKF,GAC9B,MAAO,EAAM,CACX,GAAIC,EAAU,CACZ,MAAME,EAAMC,WAAWJ,GACnBK,MAAMF,GACRJ,EAASvC,KAAKwC,GAEdD,EAASvC,KAAKoC,KAAKC,KAAKM,EAAMT,EAAQC,GAAaA,QAGrDI,EAASvC,KAAKwC,GAGhB,GADAA,EAAOF,EAASjG,aACH,IAATmG,EACF,OAAOD,EAAS1F,KAAK,IAEvB4F,GAAYA,GAKhB,SAASK,EAAoBC,GAC3B,IAAItG,EAAS,GACb,OAAQsG,EAAMrB,QACZ,IAAK,OACHjF,GAAU,OACV,MACF,IAAK,QACHA,GAAU,OACV,MACF,QACEA,GAAU,OAEd,OAAQsG,EAAMpB,QACZ,IAAK,MACHlF,GAAU,OACV,MACF,IAAK,SACHA,GAAU,OACV,MACF,QACEA,GAAU,OAGd,OADAA,GAAUsG,EAAM5G,MAAQ,SAAW,QAC5BM,EAET,SAASuG,EAAUlG,EAAMmG,GACvB,MAAMC,EAAM,CACV/H,KAAM2B,EAAK3B,KACXC,IAAK0B,EAAK1B,IACVC,MAAOyB,EAAKzB,MACZC,OAAQwB,EAAKxB,QAEf,IAqDID,EAAOC,EArDPwD,EAAOhC,EAAKgC,KAChB,CAAChC,EAAMmG,GAAgBpE,QAASkE,IAC9B,MAAMI,EAAkB,GAClB1H,EAAQsH,EAAMtH,MACdD,EAAQuH,EAAMvH,MACpB,IAcI4H,EAdAC,EAAWN,EAAMxH,OAmBrB,OAlBIE,EACED,EACF6H,GAAY,GAEZF,EAAgBnD,KAAK,cAAgBkD,EAAI7H,MAAQ6H,EAAI/H,MAAQ,KAAO,EAAI+H,EAAI9H,KAAO,KACnF+H,EAAgBnD,KAAK,eACrBkD,EAAI9H,IAAM8H,EAAI/H,KAAO,GAEdK,IACT2H,EAAgBnD,KAAK,cAAgB,EAAIkD,EAAI/H,MAAQ,KAAO+H,EAAI5H,OAAS4H,EAAI9H,KAAO,KACpF+H,EAAgBnD,KAAK,eACrBkD,EAAI9H,IAAM8H,EAAI/H,KAAO,GAGnBkI,EAAW,IACbA,GAAuC,EAA3BjB,KAAKkB,MAAMD,EAAW,IAEpCA,GAAsB,EACdA,GACN,KAAK,EACHD,EAAYF,EAAI5H,OAAS,EAAI4H,EAAI9H,IACjC+H,EAAgBI,QAAQ,aAAeH,EAAY,IAAMA,EAAY,KACrE,MACF,KAAK,EACHD,EAAgBI,QAAQ,eAAiBL,EAAI7H,MAAQ,EAAI6H,EAAI/H,MAAQ,KAAO+H,EAAI5H,OAAS,EAAI4H,EAAI9H,KAAO,KACxG,MACF,KAAK,EACHgI,EAAYF,EAAI7H,MAAQ,EAAI6H,EAAI/H,KAChCgI,EAAgBI,QAAQ,cAAgBH,EAAY,IAAMA,EAAY,KACtE,MAEAC,EAAW,IAAM,IACF,IAAbH,EAAI/H,MAA0B,IAAZ+H,EAAI9H,MACxBgI,EAAYF,EAAI/H,KAChB+H,EAAI/H,KAAO+H,EAAI9H,IACf8H,EAAI9H,IAAMgI,GAERF,EAAI7H,QAAU6H,EAAI5H,SACpB8H,EAAYF,EAAI7H,MAChB6H,EAAI7H,MAAQ6H,EAAI5H,OAChB4H,EAAI5H,OAAS8H,IAGbD,EAAgB/G,SAClB0C,EAAO,iBAAmBqE,EAAgBtG,KAAK,KAAO,KAAOiC,EAAO,UAI3C,OAAzBmE,EAAe5H,OAA4C,OAA1B4H,EAAe3H,QAClDA,EAAS,MACTD,EAAQ2G,EAAc1G,EAAQ4H,EAAI7H,MAAQ6H,EAAI5H,SACZ,OAAzB2H,EAAe5H,OAA4C,OAA1B4H,EAAe3H,QACzDD,EAAQ4H,EAAe5H,MACvBC,EAAS2H,EAAe3H,QACW,OAA1B2H,EAAe3H,QACxBA,EAAS2H,EAAe3H,OACxBD,EAAQ2G,EAAc1G,EAAQ4H,EAAI7H,MAAQ6H,EAAI5H,UAE9CD,EAAQ4H,EAAe5H,MACvBC,EAAS0G,EAAc3G,EAAO6H,EAAI5H,OAAS4H,EAAI7H,QAEnC,SAAVA,IACFA,EAAQ6H,EAAI7H,OAEC,SAAXC,IACFA,EAAS4H,EAAI5H,QAEfD,EAAyB,kBAAVA,EAAqBA,EAAQA,EAAQ,GACpDC,EAA2B,kBAAXA,EAAsBA,EAASA,EAAS,GACxD,MAAMmB,EAAS,CACb+G,WAAY,CACVnI,QACAC,SACAwH,oBAAqBA,EAAoBG,GACzCQ,QAASP,EAAI/H,KAAO,IAAM+H,EAAI9H,IAAM,IAAM8H,EAAI7H,MAAQ,IAAM6H,EAAI5H,QAElEwD,QAKF,OAHImE,EAAexB,SACjBhF,EAAOgF,QAAS,GAEXhF,EAST,IAAIiH,EAAQ,gBACRC,EAAe,aAAe/C,KAAKC,MAAM+C,SAAS,IAAM,KAAuB,SAAhBxB,KAAKyB,SAAsB,GAAGD,SAAS,IAAM,IAC5GE,EAAU,EACd,SAASC,EAAWjF,EAAMtC,EAASmH,GACjC,MAAMK,EAAM,GACZ,IAAIjH,EACJ,MAAOA,EAAQ2G,EAAMO,KAAKnF,GACxBkF,EAAIhE,KAAKjD,EAAM,IAEjB,OAAKiH,EAAI5H,QAGT4H,EAAInF,QAASqF,IACX,MAAMC,EAA0B,oBAAX3H,EAAwBA,EAAO0H,GAAM1H,EAASsH,IAC7DM,EAAYF,EAAGG,QAAQ,sBAAuB,QACpDvF,EAAOA,EAAKuF,QAAQ,IAAIC,OAAO,WAAaF,EAAY,mBAAoB,KAAM,KAAOD,EAAQ,QAE5FrF,GAPEA,EAWX,IAAIuC,EAAUpG,OAAOmF,OAAO,MAC5B,SAASmE,EAAavI,EAAU+B,GAC9BsD,EAAQrF,GAAY+B,EAEtB,SAASyG,EAAaxI,GACpB,OAAOqF,EAAQrF,IAAaqF,EAAQ,IAItC,SAASoD,EAAgBC,GACvB,IAAIC,EACJ,GAAgC,kBAArBD,EAAOC,UAChBA,EAAY,CAACD,EAAOC,gBAGpB,GADAA,EAAYD,EAAOC,YACbA,aAAqB5E,SAAW4E,EAAUvI,OAC9C,OAAO,KAGX,MAAMK,EAAS,CACbkI,YACAC,UAAsB,IAAhBF,EAAOE,KAAkB,IAAMF,EAAOE,KAC5CC,OAAQH,EAAOG,OAASH,EAAOG,OAAS,IACxCtJ,OAAQmJ,EAAOnJ,OAASmJ,EAAOnJ,OAAS,IACxCuJ,QAASJ,EAAOI,QAAUJ,EAAOI,QAAU,IAC3CjB,QAA0B,IAAlBa,EAAOb,OACfkB,MAAOL,EAAOK,MAAQL,EAAOK,MAAQ,EACrCC,kBAA8C,IAA5BN,EAAOM,kBAE3B,OAAOvI,EAET,IAAIwI,EAAgBhK,OAAOmF,OAAO,MAC9B8E,EAAqB,CACvB,4BACA,0BAEEC,EAAc,GAClB,MAAOD,EAAmB9I,OAAS,EACC,IAA9B8I,EAAmB9I,QAGjBgG,KAAKyB,SAAW,GAFpBsB,EAAYnF,KAAKkF,EAAmB7I,SAKlC8I,EAAYnF,KAAKkF,EAAmB3I,OAO1C,SAAS6I,EAAepJ,EAAUqJ,GAChC,MAAMC,EAASb,EAAgBY,GAC/B,OAAe,OAAXC,IAGJL,EAAcjJ,GAAYsJ,GACnB,GAET,SAASC,EAAavJ,GACpB,OAAOiJ,EAAcjJ,GAZvBiJ,EAAc,IAAMR,EAAgB,CAClCE,UAAW,CAAC,8BAA8Ba,OAAOL,KAkBnD,IAAIM,EAAc,CAACC,EAAMC,KACvB,IAAIlJ,EAASiJ,EAAME,GAAqC,IAAzBnJ,EAAOoJ,QAAQ,KAC9C,SAASC,EAAcjK,GACrB,cAAeA,GACb,IAAK,UACH,OAAOA,EAAQ,OAAS,QAC1B,IAAK,SACH,OAAOkK,mBAAmBlK,GAC5B,IAAK,SACH,OAAOkK,mBAAmBlK,GAC5B,QACE,MAAM,IAAI8C,MAAM,sBAatB,OAVA1D,OAAO2D,KAAK+G,GAAQ9G,QAAS3B,IAC3B,IAAIrB,EACJ,IACEA,EAAQiK,EAAcH,EAAOzI,IAC7B,MAAO2C,GACP,OAEFpD,IAAWmJ,EAAY,IAAM,KAAOG,mBAAmB7I,GAAO,IAAMrB,EACpE+J,GAAY,IAEPnJ,GAILuJ,EAAiB/K,OAAOmF,OAAO,MAC/B6F,EAAYhL,OAAOmF,OAAO,MAC1B8F,EAAc,KAChB,IAAIvG,EACJ,IAEE,GADAA,EAAWwG,MACa,oBAAbxG,EACT,OAAOA,EAET,MAAOE,IAET,IACE,MAAMuG,EAAQC,OAAOC,aAAa,KAAOD,OAAOC,aAAa,KACvDC,EAAMC,EAAOJ,EAAQ,MAAQA,GAEnC,GADAzG,EAAW4G,EAAI,eACS,oBAAb5G,EACT,OAAOA,EAET,MAAOE,IAET,OAAO,MAEL4G,EAAcP,IAIlB,SAASQ,EAAmB1K,EAAUQ,GACpC,MAAM8I,EAASC,EAAavJ,GAC5B,IAAKsJ,EACH,OAAO,EAET,IAAI7I,EACJ,GAAK6I,EAAOT,OAEL,CACL,IAAI8B,EAAgB,EACpBrB,EAAOX,UAAU9F,QAASd,IACxB,MAAM6I,EAAO7I,EACb4I,EAAgBvE,KAAKyE,IAAIF,EAAeC,EAAKxK,UAE/C,MAAM0K,EAAMrB,EAAYjJ,EAAS,QAAS,CACxCoB,MAAO,KAETnB,EAAS6I,EAAOT,OAAS8B,EAAgBrB,EAAOV,KAAKxI,OAAS0K,EAAI1K,YAVlEK,EAAS,EAYX,MAAMsK,EAAW/K,EAAW,IAAMQ,EAGlC,OAFAyJ,EAAUjK,GAAYsJ,EAAOV,KAC7BoB,EAAee,GAAYtK,EACpBA,EAET,IAAIuK,EAAU,CAAChL,EAAUQ,EAAQoB,KAC/B,MAAMqJ,EAAU,GAChB,IAAIC,EAAYlB,EAAexJ,QACb,IAAd0K,IACFA,EAAYR,EAAmB1K,EAAUQ,IAE3C,MAAM+B,EAAO,QACb,IAAIR,EAAO,CACTQ,OACAvC,WACAQ,SACAoB,MAAO,IAELxB,EAAS,EAgBb,OAfAwB,EAAMiB,QAAQ,CAACnC,EAAMqI,KACnB3I,GAAUM,EAAKN,OAAS,EACpBA,GAAU8K,GAAanC,EAAQ,IACjCkC,EAAQjH,KAAKjC,GACbA,EAAO,CACLQ,OACAvC,WACAQ,SACAoB,MAAO,IAETxB,EAASM,EAAKN,QAEhB2B,EAAKH,MAAMoC,KAAKtD,KAElBuK,EAAQjH,KAAKjC,GACNkJ,GAET,SAASE,GAAQnL,GACf,GAAwB,kBAAbA,EAAuB,CAChC,QAA4B,IAAxBiK,EAAUjK,GAAsB,CAClC,MAAMsJ,EAASC,EAAavJ,GAC5B,IAAKsJ,EACH,MAAO,IAETW,EAAUjK,GAAYsJ,EAAOV,KAE/B,OAAOqB,EAAUjK,GAEnB,MAAO,IAET,IAAIoL,GAAO,CAACR,EAAMjB,EAAQ0B,KACxB,IAAKZ,EAEH,YADAY,EAAOC,UAAK,EAAQ,KAGtB,IAAI1C,EAAOuC,GAAQxB,EAAO3J,UAC1B,OAAQ2J,EAAOpH,MACb,IAAK,QAAS,CACZ,MAAM/B,EAASmJ,EAAOnJ,OAChBoB,EAAQ+H,EAAO/H,MACf2J,EAAY3J,EAAMf,KAAK,KAC7B+H,GAAQa,EAAYjJ,EAAS,QAAS,CACpCoB,MAAO2J,IAET,MAEF,IAAK,SAAU,CACb,MAAMC,EAAM7B,EAAO6B,IACnB5C,GAA4B,MAApB4C,EAAIrL,MAAM,EAAG,GAAaqL,EAAIrL,MAAM,GAAKqL,EACjD,MAEF,QAEE,YADAH,EAAOC,UAAK,EAAQ,KAGxB,IAAIG,EAAe,IACnBhB,EAAYG,EAAOhC,GAAM8C,KAAMC,IAC7B,GAAwB,MAApBA,EAASN,OAOb,OADAI,EAAe,IACRE,EAASC,OANdC,WAAW,KACTR,EAAOC,UAAK,EAAQK,EAASN,YAMhCK,KAAM/L,IACa,kBAATA,GAA8B,OAATA,EAMhCkM,WAAW,KACTR,EAAOC,KAAK3L,KANZkM,WAAW,KACTR,EAAOC,UAAK,EAAQG,OAOvBK,MAAM,KACPT,EAAOC,UAAK,EAAQG,MAGpBM,GAAiB,CACnBf,UACAI,SAIF,SAASY,GAAUpK,GACjB,MAAMnB,EAAS,CACbwL,OAAQ,GACR3H,QAAS,GACT4H,QAAS,IAEL7G,EAAUpG,OAAOmF,OAAO,MAC9BxC,EAAMuK,KAAK,CAACC,EAAGC,IACTD,EAAEpM,WAAaqM,EAAErM,SACZoM,EAAEpM,SAASsM,cAAcD,EAAErM,UAEhCoM,EAAE5L,SAAW6L,EAAE7L,OACV4L,EAAE5L,OAAO8L,cAAcD,EAAE7L,QAE3B4L,EAAE1L,KAAK4L,cAAcD,EAAE3L,OAEhC,IAAI6L,EAAW,CACbvM,SAAU,GACVQ,OAAQ,GACRE,KAAM,IAiCR,OA/BAkB,EAAMiB,QAAS/B,IACb,GAAIyL,EAAS7L,OAASI,EAAKJ,MAAQ6L,EAAS/L,SAAWM,EAAKN,QAAU+L,EAASvM,WAAac,EAAKd,SAC/F,OAEFuM,EAAWzL,EACX,MAAMd,EAAWc,EAAKd,SAChBQ,EAASM,EAAKN,OACdE,EAAOI,EAAKJ,UACQ,IAAtB2E,EAAQrF,KACVqF,EAAQrF,GAAYf,OAAOmF,OAAO,OAEpC,MAAMI,EAAkBa,EAAQrF,QACA,IAA5BwE,EAAgBhE,KAClBgE,EAAgBhE,GAAU+D,EAAWvE,EAAUQ,IAEjD,MAAMgM,EAAehI,EAAgBhE,GACrC,IAAIiM,EAEFA,OAD+B,IAA7BD,EAAa5K,MAAMlB,GACdD,EAAOwL,OACM,KAAXzL,QAAgD,IAA/BgM,EAAalI,QAAQ5D,GACxCD,EAAO6D,QAEP7D,EAAOyL,QAEhB,MAAMnK,EAAO,CACX/B,WACAQ,SACAE,QAEF+L,EAAKzI,KAAKjC,KAELtB,EAIT,IAAIiM,GAAYzN,OAAOmF,OAAO,MAC1BuI,GAAiB1N,OAAOmF,OAAO,MACnC,SAASwI,GAAeC,EAAS3E,GAC/B2E,EAAQhK,QAAS6F,IACf,MAAM1I,EAAW0I,EAAO1I,SACxB,QAA4B,IAAxB0M,GAAU1M,GACZ,OAEF,MAAM8M,EAAoBJ,GAAU1M,GAC9BQ,EAASkI,EAAOlI,OAChBuM,EAAQD,EAAkBtM,GAC5BuM,IACFD,EAAkBtM,GAAUuM,EAAMC,OAAQC,GAAQA,EAAI/E,KAAOA,MAInE,SAASgF,GAAgBlN,EAAUQ,QACA,IAA7BmM,GAAe3M,KACjB2M,GAAe3M,GAAYf,OAAOmF,OAAO,OAE3C,MAAM+I,EAAyBR,GAAe3M,GACzCmN,EAAuB3M,KAC1B2M,EAAuB3M,IAAU,EACjCqL,WAAW,KAET,GADAsB,EAAuB3M,IAAU,OACL,IAAxBkM,GAAU1M,SAAwD,IAAhC0M,GAAU1M,GAAUQ,GACxD,OAEF,MAAMuM,EAAQL,GAAU1M,GAAUQ,GAAQL,MAAM,GAChD,IAAK4M,EAAM3M,OACT,OAEF,MAAMiF,EAAUd,EAAWvE,EAAUQ,GACrC,IAAI4M,GAAa,EACjBL,EAAMlK,QAASd,IACb,MAAMH,EAAQG,EAAKH,MACbyL,EAAYzL,EAAMsK,QAAQ9L,OAChCwB,EAAMsK,QAAUtK,EAAMsK,QAAQc,OAAQlM,IACpC,GAAIA,EAAKN,SAAWA,EAClB,OAAO,EAET,MAAME,EAAOI,EAAKJ,KAClB,QAA4B,IAAxB2E,EAAQzD,MAAMlB,GAChBkB,EAAMqK,OAAOjI,KAAK,CAChBhE,WACAQ,SACAE,aAEG,SAA8B,IAA1B2E,EAAQf,QAAQ5D,GAQzB,OADA0M,GAAa,GACN,EAPPxL,EAAM0C,QAAQN,KAAK,CACjBhE,WACAQ,SACAE,SAMJ,OAAO,IAELkB,EAAMsK,QAAQ9L,SAAWiN,IACtBD,GACHR,GAAe,CACb,CACE5M,WACAQ,WAEDuB,EAAKmG,IAEVnG,EAAK4B,SAAS/B,EAAMqK,OAAO9L,MAAM,GAAIyB,EAAM0C,QAAQnE,MAAM,GAAIyB,EAAMsK,QAAQ/L,MAAM,GAAI4B,EAAKuL,aAMpG,IAAIC,GAAY,EAChB,SAASC,GAAc7J,EAAU/B,EAAO6L,GACtC,MAAMvF,EAAKqF,KACLD,EAAQV,GAAec,KAAK,KAAMD,EAAgBvF,GACxD,IAAKtG,EAAMsK,QAAQ9L,OACjB,OAAOkN,EAET,MAAMvL,EAAO,CACXmG,KACAtG,QACA+B,WACA2J,SAcF,OAZAG,EAAe5K,QAAS6F,IACtB,MAAM1I,EAAW0I,EAAO1I,SAClBQ,EAASkI,EAAOlI,YACM,IAAxBkM,GAAU1M,KACZ0M,GAAU1M,GAAYf,OAAOmF,OAAO,OAEtC,MAAM0I,EAAoBJ,GAAU1M,QACF,IAA9B8M,EAAkBtM,KACpBsM,EAAkBtM,GAAU,IAE9BsM,EAAkBtM,GAAQwD,KAAKjC,KAE1BuL,EAIT,SAASK,GAAYlB,EAAM3M,GAAW,EAAMkF,GAAc,GACxD,MAAMvE,EAAS,GAWf,OAVAgM,EAAK5J,QAASd,IACZ,MAAMjB,EAAuB,kBAATiB,EAAoBnC,EAAamC,GAAM,EAAOiD,GAAejD,EAC5EjC,IAAYa,EAAaG,EAAMkE,IAClCvE,EAAOuD,KAAK,CACVhE,SAAUc,EAAKd,SACfQ,OAAQM,EAAKN,OACbE,KAAMI,EAAKJ,SAIVD,EAIT,IAAImN,GAAgB,CAClBjF,UAAW,GACXI,MAAO,EACPD,QAAS,IACTvJ,OAAQ,IACRsI,QAAQ,EACRmB,kBAAkB,GAIpB,SAAS6E,GAAUvE,EAAQwE,EAASC,EAAOzC,EAAM0C,GAC/C,MAAMC,EAAiB3E,EAAOX,UAAUvI,OAClC8N,EAAa5E,EAAOzB,OAASzB,KAAKkB,MAAMlB,KAAKyB,SAAWoG,GAAkB3E,EAAOP,MACvF,IAAIJ,EACJ,GAAIW,EAAOzB,OAAQ,CACjB,IAAI4E,EAAOnD,EAAOX,UAAUxI,MAAM,GAClCwI,EAAY,GACZ,MAAO8D,EAAKrM,OAAS,EAAG,CACtB,MAAM+N,EAAY/H,KAAKkB,MAAMlB,KAAKyB,SAAW4E,EAAKrM,QAClDuI,EAAU3E,KAAKyI,EAAK0B,IACpB1B,EAAOA,EAAKtM,MAAM,EAAGgO,GAAW3E,OAAOiD,EAAKtM,MAAMgO,EAAY,IAEhExF,EAAYA,EAAUa,OAAOiD,QAE7B9D,EAAYW,EAAOX,UAAUxI,MAAM+N,GAAY1E,OAAOF,EAAOX,UAAUxI,MAAM,EAAG+N,IAElF,MAAME,EAAYxJ,KAAKC,MACvB,IAAIwG,EAAS,UACTgD,EAAc,EACdC,OAAY,EACZC,EAAQ,KACRC,EAAQ,GACRC,EAAgB,GAIpB,SAASC,IACHH,IACFI,aAAaJ,GACbA,EAAQ,MAGZ,SAASjB,IACQ,YAAXjC,IACFA,EAAS,WAEXqD,IACAF,EAAM3L,QAASd,IACTA,EAAKuL,OACPvL,EAAKuL,QAEa,YAAhBvL,EAAKsJ,SACPtJ,EAAKsJ,OAAS,aAGlBmD,EAAQ,GAEV,SAASI,EAAUjL,EAAUkL,GACvBA,IACFJ,EAAgB,IAEM,oBAAb9K,GACT8K,EAAczK,KAAKL,GAGvB,SAASmL,IACP,MAAO,CACLV,YACAN,UACAzC,SACAgD,cACAU,eAAgBP,EAAMpO,OACtBwO,YACAtB,SAGJ,SAAS0B,IACP3D,EAAS,SACToD,EAAc5L,QAASc,IACrBA,OAAS,EAAQ2K,KAGrB,SAASW,IACPT,EAAQA,EAAMxB,OAAQjL,IACA,YAAhBA,EAAKsJ,SACPtJ,EAAKsJ,OAAS,WAEZtJ,EAAKuL,OACPvL,EAAKuL,SAEA,IAGX,SAAS4B,EAAenN,EAAMpC,EAAMwP,GAClC,MAAMC,OAAmB,IAATzP,EAEhB,OADA6O,EAAQA,EAAMxB,OAAQqC,GAAWA,IAAWtN,GACpCsJ,GACN,IAAK,UACH,MACF,IAAK,SACH,GAAI+D,IAAY9F,EAAON,iBACrB,OAEF,MACF,QACE,OAEJ,GAAIoG,EAWF,YAVc,IAAVD,IACFb,EAAYa,QAETX,EAAMpO,SACJuI,EAAUvI,OAGbkP,IAFAN,MASN,GAFAN,IACAO,IACIjB,IAAY1E,EAAOzB,OAAQ,CAC7B,MAAMkB,EAAQO,EAAOX,UAAUkB,QAAQ9H,EAAKwN,WAC7B,IAAXxG,GAAgBA,IAAUO,EAAOP,OACnCiF,EAAQjF,GAGZsC,EAAS,YACToD,EAAc5L,QAASc,IACrBA,EAAShE,KAGb,SAAS2P,IACP,GAAe,YAAXjE,EACF,OAEFqD,IACA,MAAMa,EAAW5G,EAAUtI,QAC3B,QAAiB,IAAbkP,EAAqB,CACvB,GAAIf,EAAMpO,OAAQ,CAChB,MAAMoP,EAAqC,oBAAnBlG,EAAOR,QAAyBQ,EAAOR,QAAQsF,GAAa9E,EAAOR,QAC3F,GAAI0G,EAQF,YAPAjB,EAAQ1C,WAAW,KACjB6C,IACe,YAAXrD,IACF4D,IACAD,MAEDQ,IAKP,YADAR,IAGF,MAAMjN,EAAO,CACX+M,iBACAzD,OAAQ,UACRkE,WACAjE,KAAM,CAAC3L,EAAMwP,KACXD,EAAenN,EAAMpC,EAAMwP,KAG/BX,EAAMxK,KAAKjC,GACXsM,IACA,MAAMvF,EAAmC,oBAAlBQ,EAAO/J,OAAwB+J,EAAO/J,OAAO8O,EAAaD,GAAa9E,EAAO/J,OACrGgP,EAAQ1C,WAAWyD,EAAUxG,GAC7BiF,EAAMwB,EAAUzB,EAAS/L,GAG3B,MA1IoB,oBAATuJ,GACTmD,EAAczK,KAAKsH,GAwIrBO,WAAWyD,GACJR,EAIT,SAASW,GAAUnG,GACjB,GAAsB,kBAAXA,GAAmD,kBAArBA,EAAOX,aAA4BW,EAAOX,qBAAqB5E,SAAWuF,EAAOX,UAAUvI,OAClI,MAAM,IAAIuC,MAAM,oCAElB,MAAM+M,EAAYzQ,OAAOmF,OAAO,MAChC,IAAIlD,EACJ,IAAKA,KAAO0M,QACU,IAAhBtE,EAAOpI,GACTwO,EAAUxO,GAAOoI,EAAOpI,GAExBwO,EAAUxO,GAAO0M,GAAc1M,GAGnC,OAAOwO,EAET,SAASC,GAAeC,GACtB,MAAMtG,EAASmG,GAAUG,GACzB,IAAIC,EAAU,GACd,SAASC,IACPD,EAAUA,EAAQ7C,OAAQjL,GAA2B,YAAlBA,IAAOsJ,QAE5C,SAAS0C,EAAMD,EAASiC,EAAeC,GACrC,MAAMC,EAASpC,GAAUvE,EAAQwE,EAASiC,EAAe,CAACpQ,EAAMwP,KAC9DW,IACIE,GACFA,EAAarQ,EAAMwP,IAEnBe,IACF5G,EAAOP,MAAQmH,IAGjB,OADAL,EAAQ7L,KAAKiM,GACNA,EAET,SAASE,EAAKxM,GACZ,MAAMlD,EAASoP,EAAQM,KAAMtQ,GACpB8D,EAAS9D,IAElB,YAAkB,IAAXY,EAAoBA,EAAS,KAEtC,MAAM2P,EAAW,CACfrC,QACAoC,OACAE,SAAWtH,IACTO,EAAOP,MAAQA,GAEjBuH,SAAU,IAAMhH,EAAOP,MACvB+G,WAEF,OAAOM,EAIT,SAASG,MAET,IAAIC,GAAkBvR,OAAOmF,OAAO,MACpC,SAASqM,GAAmBzQ,GAC1B,QAAkC,IAA9BwQ,GAAgBxQ,GAAsB,CACxC,MAAMsJ,EAASC,EAAavJ,GAC5B,IAAKsJ,EACH,OAEF,MAAMoH,EAAaf,GAAerG,GAC5BqH,EAAkB,CACtBrH,SACAoH,cAEFF,GAAgBxQ,GAAY2Q,EAE9B,OAAOH,GAAgBxQ,GAEzB,SAAS4Q,GAAapN,EAAQuK,EAAOpK,GACnC,IAAI+M,EACAtF,EACJ,GAAsB,kBAAX5H,EAAqB,CAC9B,MAAMqN,EAAMrI,EAAahF,GACzB,IAAKqN,EAEH,OADAlN,OAAS,EAAQ,KACV4M,GAETnF,EAAOyF,EAAIzF,KACX,MAAM0F,EAASL,GAAmBjN,GAC9BsN,IACFJ,EAAaI,EAAOJ,gBAEjB,CACL,MAAMpH,EAASb,EAAgBjF,GAC/B,GAAI8F,EAAQ,CACVoH,EAAaf,GAAerG,GAC5B,MAAMyH,EAAYvN,EAAOmF,UAAYnF,EAAOmF,UAAU,GAAK,GACrDkI,EAAMrI,EAAauI,GACrBF,IACFzF,EAAOyF,EAAIzF,OAIjB,OAAKsF,GAAetF,EAIbsF,EAAW3C,MAAMA,EAAO3C,EAAMzH,EAA9B+M,GAA0CpD,OAH/C3J,OAAS,EAAQ,KACV4M,IAMX,IAAIS,GAAQ,GAGZ,SAASC,MAET,IAAIC,GAAejS,OAAOmF,OAAO,MAC7B+M,GAAclS,OAAOmF,OAAO,MAC5BgN,GAAcnS,OAAOmF,OAAO,MAC5BiN,GAAapS,OAAOmF,OAAO,MAC/B,SAASkN,GAAetR,EAAUQ,QACF,IAA1B4Q,GAAYpR,KACdoR,GAAYpR,GAAYf,OAAOmF,OAAO,OAExC,MAAMmN,EAAsBH,GAAYpR,GACnCuR,EAAoB/Q,KACvB+Q,EAAoB/Q,IAAU,EAC9BqL,WAAW,KACT0F,EAAoB/Q,IAAU,EAC9B0M,GAAgBlN,EAAUQ,MAIhC,IAAIgR,GAAcvS,OAAOmF,OAAO,MAChC,SAASqN,GAAazR,EAAUQ,EAAQoB,GACtC,SAASiC,IACP,MAAM3C,GAAoB,KAAblB,EAAkB,GAAK,IAAMA,EAAW,KAAOQ,EACtDkR,EAAOtL,KAAKkB,MAAM1C,KAAKC,MAAQ,KACjC2M,GAAYtQ,GAAOwQ,IACrBF,GAAYtQ,GAAOwQ,EACnBC,QAAQxC,MAAM,iCAAmCjO,EAAM,mDAG7B,IAA1BiQ,GAAYnR,KACdmR,GAAYnR,GAAYf,OAAOmF,OAAO,OAExC,MAAMwN,EAAsBT,GAAYnR,QACX,IAAzBqR,GAAWrR,KACbqR,GAAWrR,GAAYf,OAAOmF,OAAO,OAEvC,MAAMyN,EAAqBR,GAAWrR,QACP,IAA3BkR,GAAalR,KACfkR,GAAalR,GAAYf,OAAOmF,OAAO,OAEzC,MAAM0N,EAAuBZ,GAAalR,QACN,IAAhC4R,EAAoBpR,GACtBoR,EAAoBpR,GAAUoB,EAE9BgQ,EAAoBpR,GAAUoR,EAAoBpR,GAAQgJ,OAAO5H,GAAOuK,OAErE0F,EAAmBrR,KACtBqR,EAAmBrR,IAAU,EAC7BqL,WAAW,KACTgG,EAAmBrR,IAAU,EAC7B,MAAMuR,EAASH,EAAoBpR,UAC5BoR,EAAoBpR,GAC3B,MAAMqQ,EAAMrI,EAAaxI,GACzB,IAAK6Q,EAEH,YADAhN,IAGF,MAAM8F,EAASkH,EAAI7F,QAAQhL,EAAUQ,EAAQuR,GAC7CpI,EAAO9G,QAASd,IACd6O,GAAa5Q,EAAU+B,EAAM,CAACpC,EAAMwP,KAClC,MAAM9J,EAAUd,EAAWvE,EAAUQ,GACrC,GAAoB,kBAATb,EAAmB,CAC5B,GAAc,MAAVwP,EACF,OAEF,MAAMxK,EAAIC,KAAKC,MACf9C,EAAKH,MAAMiB,QAASnC,IAClB2E,EAAQf,QAAQ5D,GAAQiE,SAG1B,IACE,MAAMqN,EAASvN,EAAWY,EAAS1F,GACnC,IAAKqS,EAAO5R,OACV,OAEF,MAAM8L,EAAU4F,EAAqBtR,GACrCwR,EAAOnP,QAASnC,WACPwL,EAAQxL,KAEbsQ,GAAMiB,OACRjB,GAAMiB,MAAMjS,EAAUL,GAExB,MAAOuS,GACPP,QAAQxC,MAAM+C,GAGlBZ,GAAetR,EAAUQ,UAMnC,IAAI2R,GAAY,CAACvQ,EAAO+B,KACtB,MAAMyO,EAAezE,GAAY/L,GAAO,EAAMqD,KACxCoN,EAAcrG,GAAUoG,GAC9B,IAAKC,EAAYnG,QAAQ9L,OAAQ,CAC/B,IAAIkS,GAAe,EAQnB,OAPI3O,GACFkI,WAAW,KACLyG,GACF3O,EAAS0O,EAAYpG,OAAQoG,EAAY/N,QAAS+N,EAAYnG,QAAS+E,MAItE,KACLqB,GAAe,GAGnB,MAAMC,EAAWtT,OAAOmF,OAAO,MACzByI,EAAU,GAChB,IAAI2F,EAAcC,EAClBJ,EAAYnG,QAAQrJ,QAAS/B,IAC3B,MAAMd,EAAWc,EAAKd,SAChBQ,EAASM,EAAKN,OACpB,GAAIA,IAAWiS,GAAczS,IAAawS,EACxC,OAEFA,EAAexS,EACfyS,EAAajS,EACbqM,EAAQ7I,KAAK,CACXhE,WACAQ,gBAE6B,IAA3B0Q,GAAalR,KACfkR,GAAalR,GAAYf,OAAOmF,OAAO,OAEzC,MAAM0N,EAAuBZ,GAAalR,QACL,IAAjC8R,EAAqBtR,KACvBsR,EAAqBtR,GAAUvB,OAAOmF,OAAO,YAEpB,IAAvBmO,EAASvS,KACXuS,EAASvS,GAAYf,OAAOmF,OAAO,OAErC,MAAMsO,EAAmBH,EAASvS,QACD,IAA7B0S,EAAiBlS,KACnBkS,EAAiBlS,GAAU,MAG/B,MAAMkR,EAAO9M,KAAKC,MAkBlB,OAjBAwN,EAAYnG,QAAQrJ,QAAS/B,IAC3B,MAAMd,EAAWc,EAAKd,SAChBQ,EAASM,EAAKN,OACdE,EAAOI,EAAKJ,KACZiS,EAAezB,GAAalR,GAAUQ,QACjB,IAAvBmS,EAAajS,KACfiS,EAAajS,GAAQgR,EACrBa,EAASvS,GAAUQ,GAAQwD,KAAKtD,MAGpCmM,EAAQhK,QAAS6F,IACf,MAAM1I,EAAW0I,EAAO1I,SAClBQ,EAASkI,EAAOlI,OAClB+R,EAASvS,GAAUQ,GAAQJ,QAC7BqR,GAAazR,EAAUQ,EAAQ+R,EAASvS,GAAUQ,MAG/CmD,EAAW6J,GAAc7J,EAAU0O,EAAaxF,GAAWoE,IAIhE2B,GAAe,WACfC,GAAc,UACdC,GAAWD,GAAc,SACzBE,GAAaF,GAAc,WAC3BG,GAAO,KACPC,GAAkB,IAClB3J,GAAS,CACX4J,OAAO,EACPC,SAAS,GAEPlH,IAAS,EACTmH,GAAQ,CACVF,MAAO,EACPC,QAAS,GAEPE,GAAY,CACdH,MAAO,GACPC,QAAS,IAEPG,GAA4B,qBAAXC,OAAyB,GAAKA,OACnD,SAASC,GAAUtS,GACjB,MAAMoB,EAAOpB,EAAM,UACnB,IACE,GAAIoS,IAAWA,GAAQhR,IAAyC,kBAAzBgR,GAAQhR,GAAMlC,OACnD,OAAOkT,GAAQhR,GAEjB,MAAOuB,IAGT,OADAyF,GAAOpI,IAAO,EACP,KAET,SAASuS,GAASpO,EAASnE,EAAKrB,GAC9B,IAGE,OAFAwF,EAAQqO,QAAQZ,GAAUjT,EAAQ,IAClCuT,GAAMlS,GAAOrB,GACN,EACP,MAAOgE,GACP,OAAO,GAGX,SAAS8P,GAAStO,GAChB,MAAMuO,EAASvO,EAAQwO,QAAQf,IAC/B,GAAIc,EAAQ,CACV,MAAME,EAAQC,SAASH,GACvB,OAAOE,GAAgB,EAEzB,OAAO,EAET,SAASE,GAAU3O,EAASnE,GAC1B,IACEmE,EAAQqO,QAAQX,GAAYH,IAC5B,MAAO/O,IAET4P,GAASpO,EAASnE,EAAK,GAEzB,SAAS+S,GAAa5O,GACpB,IACE,MAAMyO,EAAQH,GAAStO,GACvB,IAAK,IAAI6O,EAAI,EAAGA,EAAIJ,EAAOI,IACzB7O,EAAQ8O,WAAWtB,GAAcqB,GAEnC,MAAOrQ,KAGX,IAAIuQ,GAAY,KACd,GAAInI,GACF,OAEFA,IAAS,EACT,MAAMoI,EAAUjO,KAAKkB,MAAM1C,KAAKC,MAAQmO,IAAQC,GAChD,SAASqB,EAAKpT,GACZ,MAAMqT,EAAOf,GAAUtS,GACvB,IAAKqT,EACH,OAEF,MAAMV,EAAW9K,IACf,MAAMrI,EAAOmS,GAAc9J,EACrBhH,EAAOwS,EAAKV,QAAQnT,GAC1B,GAAoB,kBAATqB,EACT,OAAO,EAET,IAAIyS,GAAQ,EACZ,IACE,MAAM7U,EAAO8U,KAAKC,MAAM3S,GACxB,GAAoB,kBAATpC,GAA4C,kBAAhBA,EAAKmR,QAAuBnR,EAAKmR,OAASuD,GAAoC,kBAAlB1U,EAAKK,UAA8C,kBAAdL,EAAKA,MAAiD,kBAArBA,EAAKA,KAAKa,OACjLgU,GAAQ,MACH,CACL,MAAMxU,EAAWL,EAAKK,SAChBQ,EAASb,EAAKA,KAAKa,OACnB6E,EAAUd,EAAWvE,EAAUQ,GACrCgU,EAAQ/P,EAAWY,EAAS1F,EAAKA,MAAMS,OAAS,GAElD,MAAOyD,GACP2Q,GAAQ,EAKV,OAHKA,GACHD,EAAKJ,WAAWzT,GAEX8T,GAET,IACE,MAAMG,EAAUJ,EAAKV,QAAQd,IAC7B,GAAI4B,IAAY/B,GAKd,OAJI+B,GACFV,GAAaM,QAEfP,GAAUO,EAAMrT,GAGlB,IAAI4S,EAAQH,GAASY,GACrB,IAAK,IAAIL,EAAIJ,EAAQ,EAAGI,GAAK,EAAGA,IACzBL,EAAQK,KACPA,IAAMJ,EAAQ,EAChBA,IAEAT,GAAUnS,GAAK8C,KAAKkQ,IAI1BT,GAASc,EAAMrT,EAAK4S,GACpB,MAAOjQ,KAGX,IAAK,MAAM3C,KAAOoI,GAChBgL,EAAKpT,IAGL0T,GAAa,CAAC5U,EAAUL,KAI1B,SAASsS,EAAM/Q,GACb,IAAKoI,GAAOpI,GACV,OAAO,EAET,MAAMqT,EAAOf,GAAUtS,GACvB,IAAKqT,EACH,OAAO,EAET,IAAIxL,EAAQsK,GAAUnS,GAAKb,QAC3B,QAAc,IAAV0I,IACFA,EAAQqK,GAAMlS,IACTuS,GAASc,EAAMrT,EAAK6H,EAAQ,IAC/B,OAAO,EAGX,IACE,MAAMhH,EAAO,CACX+O,OAAQ1K,KAAKkB,MAAM1C,KAAKC,MAAQmO,IAChChT,WACAL,QAEF4U,EAAKb,QAAQb,GAAc9J,EAAO0L,KAAKI,UAAU9S,IACjD,MAAO8B,GACP,OAAO,EAET,OAAO,EA5BJoI,IACHmI,KA6BGnC,EAAM,UACTA,EAAM,YAoBV,IAAI6C,GAAY,SAChB,SAASC,GAAeC,EAAQC,GAC9BA,EAAK/U,MAAM4U,IAAWjS,QAASqS,IAC7B,MAAMrV,EAAQqV,EAAIC,OAClB,OAAQtV,GACN,IAAK,aACHmV,EAAOvV,OAAQ,EACf,MACF,IAAK,WACHuV,EAAOxV,OAAQ,EACf,SAIR,SAAS4V,GAAoBJ,EAAQK,GACnCA,EAAMnV,MAAM4U,IAAWjS,QAASqS,IAC9B,MAAMrV,EAAQqV,EAAIC,OAClB,OAAQtV,GACN,IAAK,OACL,IAAK,SACL,IAAK,QACHmV,EAAOtP,OAAS7F,EAChB,MACF,IAAK,MACL,IAAK,SACL,IAAK,SACHmV,EAAOrP,OAAS9F,EAChB,MACF,IAAK,QACL,IAAK,OACHmV,EAAO7U,OAAQ,EACf,MACF,IAAK,OACH6U,EAAO7U,OAAQ,KAMvB,SAASmV,GAAiBzV,EAAO0V,EAAe,GAC9C,MAAMC,EAAQ3V,EAAMwI,QAAQ,aAAc,IAC1C,SAASyH,EAAQ2F,GACf,MAAOA,EAAS,EACdA,GAAU,EAEZ,OAAOA,EAAS,EAElB,GAAc,KAAVD,EAAc,CAChB,MAAM7O,EAAMoN,SAASlU,GACrB,OAAOgH,MAAMF,GAAO,EAAImJ,EAAQnJ,GAC3B,GAAI6O,IAAU3V,EAAO,CAC1B,IAAIK,EAAQ,EACZ,OAAQsV,GACN,IAAK,IACHtV,EAAQ,GACR,MACF,IAAK,MACHA,EAAQ,GAEZ,GAAIA,EAAO,CACT,IAAIyG,EAAMC,WAAW/G,EAAMM,MAAM,EAAGN,EAAMO,OAASoV,EAAMpV,SACzD,OAAIyG,MAAMF,GACD,GAETA,GAAYzG,EACLyG,EAAM,IAAM,EAAImJ,EAAQnJ,GAAO,IAG1C,OAAO4O,EAMT,MAAMG,GAAc,CAChB,MAAS,6BACT,cAAe,+BACf,eAAe,EACf,KAAQ,OAMZ,IAAIC,GAAuB,GAC3B,CAAC,aAAc,YAAY9S,QAASrC,IAChC,CAAC,QAAS,QAAQqC,QAAS+S,IACvB,MAAMtT,EAAO9B,EAAOL,MAAM,EAAG,GAAKyV,EAC5B/V,EAAQ,CACVyC,OACAuT,QAAoB,SAAXD,GAGbD,GAAqBnV,EAAS,IAAMoV,EAAOE,eAAiBjW,EAE5D8V,GAAqBnV,EAAOL,MAAM,EAAG,GAAK,IAAMyV,EAAOE,eACnDjW,EAEJ8V,GAAqBnV,EAASoV,GAAU/V,MAMhD,MAAMkW,GAAS,CAACC,EAEhBjP,EAEAkP,EAEAnV,KAEI,MAAMmG,EAAiBrB,EAAoBJ,EAAUuB,GAC/CmP,EAAiB,IAAKR,IAEtBS,EAAQ,GAEd,IAAK,IAAIjV,KAAO6F,EAAO,CACnB,MAAMlH,EAAQkH,EAAM7F,GACpB,QAAc,IAAVrB,EAGJ,OAAQqB,GAEJ,IAAK,OACL,IAAK,QACL,IAAK,SACD,MAEJ,IAAK,SACL,IAAK,QACL,IAAK,QACD+F,EAAe/F,IACD,IAAVrB,GAA4B,SAAVA,GAA8B,IAAVA,EAC1C,MAEJ,IAAK,OACoB,kBAAVA,GACPkV,GAAe9N,EAAgBpH,GAEnC,MAEJ,IAAK,QACoB,kBAAVA,GACPuV,GAAoBnO,EAAgBpH,GAExC,MAEJ,IAAK,QACDsW,EAAMC,MAAQvW,EACd,MAEJ,IAAK,SACoB,kBAAVA,EACPoH,EAAe/F,GAAOoU,GAAiBzV,GAEjB,kBAAVA,IACZoH,EAAe/F,GAAOrB,GAE1B,MAEJ,IAAK,aACL,IAAK,eAEa,IAAVA,GAA4B,SAAVA,UACXqW,EAAe,eAE1B,MACJ,aACsC,IAA9BP,GAAqBzU,IAEjByU,GAAqBzU,GAAK2U,UACf,IAAVhW,GAA4B,SAAVA,GAA8B,IAAVA,EAIjC8V,GAAqBzU,GAAK2U,SACf,kBAAVhW,GACG,KAAVA,IAEAoH,EAAe0O,GAAqBzU,GAAKoB,MAAQzC,GANjDoH,EAAe0O,GAAqBzU,GAAKoB,OAAQ,OAS9B,IAAlBkD,EAAStE,KAEdgV,EAAehV,GAAOrB,IAKtC,MAAMkC,EAAOiF,EAAUlG,EAAMmG,GAE7B,IAAK,IAAI/F,KAAOa,EAAKyF,WACjB0O,EAAehV,GAAOa,EAAKyF,WAAWtG,GAEtCa,EAAK0D,SACL0Q,EAAME,cAAgB,YAG1B,IAAIC,EAAe,EACnB,MAAMpO,EAAKnB,EAAMmB,GAEXvI,EAAO,CACT4W,MAAOL,EACPM,SAAU,CACNC,UAAW1O,EAAWhG,EAAKe,KAAMoF,EAAK,IAAMA,EAAK,IAAMoO,IAAiB,kBAmBhF,OAhBIrX,OAAO2D,KAAKuT,GAAO/V,OAAS,IAC5BT,EAAKwW,MAAQA,GAEbF,IACA,CAAC,KAAM,OAAOpT,QAASP,SACO,IAAtB2T,EAAY3T,KACZ3C,EAAK2C,GAAQ2T,EAAY3T,MAGjC,CAAC,cAAe,SAASO,QAASP,SACJ,IAAtB2T,EAAY3T,KACZ3C,EAAK+W,MAAQT,EAAY3T,OAK9B0T,EAAc,MAAOrW,IAyBhC,GANAsF,GAAiB,GAEjBsD,EAAa,GAAIwD,IAIO,qBAAb4K,UAA8C,qBAAXpD,OAAwB,CAElEvC,GAAMiB,MAAQ2C,GACdR,KACA,MAAMd,EAAUC,OAEhB,QAA+B,IAA3BD,EAAQsD,eAA2B,CACnC,MAAMC,EAAUvD,EAAQsD,eAClB/S,EAAM,iCACW,kBAAZgT,GAAoC,OAAZA,IAC9BA,aAAmB9S,MAAQ8S,EAAU,CAACA,IAAUhU,QAASd,IACtD,KAGoB,kBAATA,GACM,OAATA,GACAA,aAAgBgC,OAEM,kBAAfhC,EAAKH,OACW,kBAAhBG,EAAKvB,SAEX8E,EAAcvD,KACf4P,QAAQxC,MAAMtL,GAGtB,MAAOiT,GACHnF,QAAQxC,MAAMtL,MAM9B,QAAiC,IAA7ByP,EAAQyD,iBAA6B,CACrC,MAAMC,EAAY1D,EAAQyD,iBAC1B,GAAyB,kBAAdC,GAAwC,OAAdA,EACjC,IAAK,IAAI9V,KAAO8V,EAAW,CACvB,MAAMnT,EAAM,oBAAsB3C,EAAM,gBACxC,IACI,MAAMrB,EAAQmX,EAAU9V,GACxB,GAAqB,kBAAVrB,IACNA,QACmB,IAApBA,EAAM8I,UACN,SAECS,EAAelI,EAAKrB,IACrB8R,QAAQxC,MAAMtL,GAGtB,MAAOiT,IACHnF,QAAQxC,MAAMtL,MAMlC,MAAMoT,GAAO,OAAIC,OAAO,CAGpBC,cAAc,EAEd,OACI,MAAO,CAEHC,SAAS,IAGjB,cAEIC,KAAKC,MAAQ,GAEbD,KAAKE,aAAe,KAEpBF,KAAKD,SAAU,GAEnB,gBACIC,KAAKG,gBAETC,QAAS,CACL,eACQJ,KAAKE,eACLF,KAAKE,aAAajK,QAClB+J,KAAKE,aAAe,OAI5B,QAAQzW,EAAM4W,GAEV,GAAoB,kBAAT5W,GACE,OAATA,GACqB,kBAAdA,EAAKgC,KAIZ,OAFAuU,KAAKC,MAAQ,GACbD,KAAKG,eACE,CACH7X,KAAMD,EAASoB,IAIvB,IAAI6W,EACJ,GAAoB,kBAAT7W,GAC0C,QAAhD6W,EAAW/X,EAAakB,GAAM,GAAO,IAEtC,OADAuW,KAAKG,eACE,KAGX,MAAM7X,EAAOwF,EAAYwS,GACzB,GAAa,OAAThY,EAaA,OAXK0X,KAAKE,cAAgBF,KAAKE,aAAa7W,OAASI,IAEjDuW,KAAKG,eACLH,KAAKC,MAAQ,GACbD,KAAKE,aAAe,CAChB7W,KAAMI,EACNwM,MAAO6E,GAAU,CAACwF,GAAW,KACzBN,KAAKO,mBAIV,KAGXP,KAAKG,eACDH,KAAKC,QAAUxW,IACfuW,KAAKC,MAAQxW,EACT4W,GACAA,EAAO5W,IAIf,MAAM+W,EAAU,CAAC,WAOjB,MANwB,KAApBF,EAASnX,QACTqX,EAAQ7T,KAAK,YAAc2T,EAASnX,QAEd,KAAtBmX,EAAS3X,UACT6X,EAAQ7T,KAAK,YAAc2T,EAAS3X,UAEjC,CAAEL,OAAMkY,aAIvB,OAAO7B,GACH,SAAS8B,EAAYC,GAEjB,GAAIA,EAAMC,QAAS,CACf,MAAMvX,EAASsX,EAAMC,QACrB,GAAIvX,aAAkBsD,OAAStD,EAAOL,OAAS,EAE3C,OAAyB,IAAlBK,EAAOL,OACRK,EAAO,GACPuV,EAAc,OAAQvV,GAGpC,OAAO,KAEX,IAAK4W,KAAKD,QACN,OAAOU,EAAYT,KAAKY,QAG5B,MAAMlR,EAAQsQ,KAAKa,OACbpX,EAAOuW,KAAK/V,QAAQyF,EAAMjG,KAAMiG,EAAMoR,QAE5C,IAAKrX,EAED,OAAOgX,EAAYT,KAAKY,QAG5B,IAAIG,EAAUf,KAAKgB,MAUnB,OATIvX,EAAK+W,UACLO,EAAU,IACHA,EACH1B,OAAoC,kBAArB0B,EAAQ,SACjBA,EAAQ,SAAW,IACnB,IAAMtX,EAAK+W,QAAQhX,KAAK,OAI/BkV,GAAOC,EAAejP,EAAOqR,EAAStX,EAAKnB,W","file":"js/chunk-2d0d3fbe.51ab7f47.js","sourcesContent":["import Vue from 'vue';\n\n// src/icon/index.ts\nvar matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nvar iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\n// src/icon/name.ts\nvar stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nvar validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\n// src/icon/merge.ts\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\n// src/icon-set/get-icon.ts\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    var _a, _b, _c, _d;\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    if (((_a = data.aliases) == null ? void 0 : _a[name2]) !== void 0) {\n      const item = (_b = data.aliases) == null ? void 0 : _b[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    if (iteration === 0 && ((_c = data.chars) == null ? void 0 : _c[name2]) !== void 0) {\n      return getIcon((_d = data.chars) == null ? void 0 : _d[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\n// src/icon-set/validate.ts\nvar matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n    }\n  }\n  return null;\n}\nfunction validateIconSet(obj, options) {\n  const fix = !!(options == null ? void 0 : options.fix);\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n  const data = obj;\n  if (typeof (options == null ? void 0 : options.prefix) === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n  if (typeof (options == null ? void 0 : options.provider) === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n    const item = icons[name];\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n  if (!Object.keys(data.icons).length) {\n    throw new Error(\"Icon set is empty\");\n  }\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function(name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n      const item = aliases[name];\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n      const parent = item.parent;\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n      validatedAliases.add(name);\n      return true;\n    };\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach((name) => {\n      validateAlias(name, 0);\n    });\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n  Object.keys(iconDefaults).forEach((prop) => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach((char) => {\n      var _a;\n      if (!char.match(matchChar) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n      const target = chars[char];\n      if (data.icons[target] === void 0 && ((_a = data.aliases) == null ? void 0 : _a[target]) === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n  return data;\n}\n\n// src/icon-set/parse.ts\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  const validate = options.validate;\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : { fix: true });\n    } catch (err) {\n      return names;\n    }\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\n// src/storage/storage.ts\nvar storage$1 = Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: Object.create(null),\n    missing: Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\n// src/storage/functions.ts\nvar simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\n// src/customisations/index.ts\nvar defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\n// src/svg/size.ts\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\n// src/svg/build.ts\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left) + \" \" + (0 - box.top) + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left) + \" \" + (box.height + box.top) + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left) + \" \" + (box.height / 2 + box.top) + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width + \"\";\n  height = typeof height === \"string\" ? height : height + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left + \" \" + box.top + \" \" + box.width + \" \" + box.height\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\n// src/builder/functions.ts\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\n// src/svg/id.ts\nvar regex = /\\sid=\"(\\S+)\"/g;\nvar randomPrefix = \"IconifyId-\" + Date.now().toString(16) + \"-\" + (Math.random() * 16777216 | 0).toString(16) + \"-\";\nvar counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + counter++;\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\n// src/api/modules.ts\nvar storage = Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\n// src/api/config.ts\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nvar configStorage = Object.create(null);\nvar fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nvar fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\n// src/api/params.ts\nvar mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\n// src/api/modules/fetch.ts\nvar maxLengthCache = Object.create(null);\nvar pathCache = Object.create(null);\nvar detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  try {\n    const chunk = String.fromCharCode(114) + String.fromCharCode(101);\n    const req = global[chunk + \"qui\" + chunk];\n    callback = req(\"cross-fetch\");\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nvar fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nvar prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nvar send = (host, params, status) => {\n  if (!fetchModule) {\n    status.done(void 0, 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      status.done(void 0, 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    if (response.status !== 200) {\n      setTimeout(() => {\n        status.done(void 0, response.status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        status.done(void 0, defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      status.done(data);\n    });\n  }).catch(() => {\n    status.done(void 0, defaultError);\n  });\n};\nvar fetchAPIModule = {\n  prepare,\n  send\n};\n\n// src/icon/sort.ts\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\n// src/api/callbacks.ts\nvar callbacks = Object.create(null);\nvar pendingUpdates = Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nvar idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\n// src/icon/list.ts\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done, success) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError = void 0;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.abort) {\n        item.abort();\n      }\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue = queue.filter((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n      if (item.abort) {\n        item.abort();\n      }\n      return false;\n    });\n  }\n  function moduleResponse(item, data, error) {\n    const isError = data === void 0;\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (isError) {\n      if (error !== void 0) {\n        lastError = error;\n      }\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (success && !config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        success(index);\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        const timeout2 = typeof config.timeout === \"function\" ? config.timeout(startTime) : config.timeout;\n        if (timeout2) {\n          timer = setTimeout(() => {\n            resetTimer();\n            if (status === \"pending\") {\n              clearQueue();\n              failQuery();\n            }\n          }, timeout2);\n          return;\n        }\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      getQueryStatus,\n      status: \"pending\",\n      resource,\n      done: (data, error) => {\n        moduleResponse(item, data, error);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    const timeout = typeof config.rotate === \"function\" ? config.rotate(queriesSent, startTime) : config.rotate;\n    timer = setTimeout(execNext, timeout);\n    query(resource, payload, item);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    }, (newIndex) => {\n      config.index = newIndex;\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\n// src/api/query.ts\nfunction emptyCallback$1() {\n}\nvar redundancyCache = Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\n// src/cache.ts\nvar cache = {};\n\n// src/api/icons.ts\nfunction emptyCallback() {\n}\nvar pendingIcons = Object.create(null);\nvar iconsToLoad = Object.create(null);\nvar loaderFlags = Object.create(null);\nvar queueFlags = Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nvar errorsCache = Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nvar loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n\n// src/browser-storage/index.ts\nvar cacheVersion = \"iconify2\";\nvar cachePrefix = \"iconify\";\nvar countKey = cachePrefix + \"-count\";\nvar versionKey = cachePrefix + \"-version\";\nvar hour = 36e5;\nvar cacheExpiration = 168;\nvar config = {\n  local: true,\n  session: true\n};\nvar loaded = false;\nvar count = {\n  local: 0,\n  session: 0\n};\nvar emptyList = {\n  local: [],\n  session: []\n};\nvar _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value + \"\");\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i);\n    }\n  } catch (err) {\n  }\n}\nvar loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index;\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nvar storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index, JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\n// src/browser-storage/functions.ts\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\n// src/customisations/shorthand.ts\nvar separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\n// src/customisations/rotate.ts\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-align and v-flip must be renamed\n */\nlet customisationAliases = {};\n['horizontal', 'vertical'].forEach((prefix) => {\n    ['Align', 'Flip'].forEach((suffix) => {\n        const attr = prefix.slice(0, 1) + suffix;\n        const value = {\n            attr,\n            boolean: suffix === 'Flip',\n        };\n        // vertical-align\n        customisationAliases[prefix + '-' + suffix.toLowerCase()] = value;\n        // v-align\n        customisationAliases[prefix.slice(0, 1) + '-' + suffix.toLowerCase()] =\n            value;\n        // verticalAlign\n        customisationAliases[prefix + suffix] = value;\n    });\n});\n/**\n * Render icon\n */\nconst render = (createElement, \n// context.props\nprops, \n// context.data\ncontextData, \n// Icon must be validated before calling this function\nicon) => {\n    // Split properties\n    const customisations = mergeCustomisations(defaults, props);\n    const componentProps = { ...svgDefaults };\n    // Style in Vue 2 components is always passed to rendered component, so no point in parsing it\n    const style = {};\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    alignmentFromString(customisations, value);\n                }\n                break;\n            // Color: override style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default:\n                if (customisationAliases[key] !== void 0) {\n                    // Aliases for customisations\n                    if (customisationAliases[key].boolean &&\n                        (value === true || value === 'true' || value === 1)) {\n                        // Check for boolean\n                        customisations[customisationAliases[key].attr] = true;\n                    }\n                    else if (!customisationAliases[key].boolean &&\n                        typeof value === 'string' &&\n                        value !== '') {\n                        // String\n                        customisations[customisationAliases[key].attr] = value;\n                    }\n                }\n                else if (defaults[key] === void 0) {\n                    // Copy missing property if it does not exist in customisations\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Add icon stuff\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    const id = props.id;\n    // Generate node data\n    const data = {\n        attrs: componentProps,\n        domProps: {\n            innerHTML: replaceIDs(item.body, id ? () => id + '-' + localCounter++ : 'iconify-vue-'),\n        },\n    };\n    if (Object.keys(style).length > 0) {\n        data.style = style;\n    }\n    if (contextData) {\n        ['on', 'ref'].forEach((attr) => {\n            if (contextData[attr] !== void 0) {\n                data[attr] = contextData[attr];\n            }\n        });\n        ['staticClass', 'class'].forEach((attr) => {\n            if (contextData[attr] !== void 0) {\n                data.class = contextData[attr];\n            }\n        });\n    }\n    // Render icon\n    return createElement('svg', data);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nconst Icon = Vue.extend({\n    // Do not inherit other attributes: it is handled by render()\n    // In Vue 2 style is still passed!\n    inheritAttrs: false,\n    // Set initial data\n    data() {\n        return {\n            // Mounted status\n            mounted: false,\n        };\n    },\n    beforeMount() {\n        // Current icon name\n        this._name = '';\n        // Loading\n        this._loadingIcon = null;\n        // Mark as mounted\n        this.mounted = true;\n    },\n    beforeDestroy() {\n        this.abortLoading();\n    },\n    methods: {\n        abortLoading() {\n            if (this._loadingIcon) {\n                this._loadingIcon.abort();\n                this._loadingIcon = null;\n            }\n        },\n        // Get data for icon to render or null\n        getIcon(icon, onload) {\n            // Icon is an object\n            if (typeof icon === 'object' &&\n                icon !== null &&\n                typeof icon.body === 'string') {\n                // Stop loading\n                this._name = '';\n                this.abortLoading();\n                return {\n                    data: fullIcon(icon),\n                };\n            }\n            // Invalid icon?\n            let iconName;\n            if (typeof icon !== 'string' ||\n                (iconName = stringToIcon(icon, false, true)) === null) {\n                this.abortLoading();\n                return null;\n            }\n            // Load icon\n            const data = getIconData(iconName);\n            if (data === null) {\n                // Icon needs to be loaded\n                if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n                    // New icon to load\n                    this.abortLoading();\n                    this._name = '';\n                    this._loadingIcon = {\n                        name: icon,\n                        abort: loadIcons([iconName], () => {\n                            this.$forceUpdate();\n                        }),\n                    };\n                }\n                return null;\n            }\n            // Icon data is available\n            this.abortLoading();\n            if (this._name !== icon) {\n                this._name = icon;\n                if (onload) {\n                    onload(icon);\n                }\n            }\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            return { data, classes };\n        },\n    },\n    // Render icon\n    render(createElement) {\n        function placeholder(slots) {\n            // Render child nodes\n            if (slots.default) {\n                const result = slots.default;\n                if (result instanceof Array && result.length > 0) {\n                    // If there are multiple child nodes, they must be wrapped in Vue 2\n                    return result.length === 1\n                        ? result[0]\n                        : createElement('span', result);\n                }\n            }\n            return null;\n        }\n        if (!this.mounted) {\n            return placeholder(this.$slots);\n        }\n        // Get icon data\n        const props = this.$attrs;\n        const icon = this.getIcon(props.icon, props.onLoad);\n        // Validate icon object\n        if (!icon) {\n            // Render child nodes\n            return placeholder(this.$slots);\n        }\n        // Add classes\n        let context = this.$data;\n        if (icon.classes) {\n            context = {\n                ...context,\n                class: (typeof context['class'] === 'string'\n                    ? context['class'] + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(createElement, props, context, icon.data);\n    },\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    listAPIProviders,\n    mergeParams,\n};\n\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcons, replaceIDs };\n"],"sourceRoot":""}